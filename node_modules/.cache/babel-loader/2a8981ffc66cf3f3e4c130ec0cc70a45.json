{"ast":null,"code":"import _objectSpread from \"/Users/max/Desktop/TRON/todopotila/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/max/Desktop/TRON/todopotila/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = [{\n  id: 0,\n  text: \"Do Car Maintenance\",\n  completed: false\n}, {\n  id: 1,\n  text: \"Study Spanish\",\n  completed: false\n}];\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _toConsumableArray(state).concat([{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case 'TOGGLE_TODO':\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/max/Desktop/TRON/todopotila/src/reducers/todos.js"],"names":["initialState","id","text","completed","todos","state","action","type","map","todo"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,CAAE;AAACC,EAAAA,EAAE,EAAE,CAAL;AACrBC,EAAAA,IAAI,EAAE,oBADe;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAF,EAGnB;AAACF,EAAAA,EAAE,EAAE,CAAL;AACEC,EAAAA,IAAI,EAAE,eADR;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAHmB,CAArB;;AAOA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,gCACKF,KADL,UAEE;AACEJ,QAAAA,EAAE,EAAEK,MAAM,CAACL,EADb;AAEEC,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFF;;AAQF,SAAK,aAAL;AACE,aAAOE,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,eAClBA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAApB,qBACQQ,IADR;AACcN,UAAAA,SAAS,EAAE,CAACM,IAAI,CAACN;AAD/B,aAEIM,IAHe;AAAA,OAAd,CAAP;;AAKF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,KAAf","sourcesContent":["const initialState = [ {id: 0,\n  text: \"Do Car Maintenance\",\n  completed: false},\n  {id: 1,\n    text: \"Study Spanish\",\n    completed: false}];\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ];\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      );\n    default:\n      return state\n  }\n}\n\nexport default todos\n"]},"metadata":{},"sourceType":"module"}