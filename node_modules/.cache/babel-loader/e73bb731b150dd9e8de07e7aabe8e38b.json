{"ast":null,"code":"import _objectSpread from \"/Users/max/Desktop/TRON/todopotila/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/max/Desktop/TRON/todopotila/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = [\"Do Car Maintenance\", \"Study Spanish\", \"Renew Insurance\", \"Buy Groceries\"];\n\nvar todos = function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _toConsumableArray(state).concat([{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case 'TOGGLE_TODO':\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/max/Desktop/TRON/todopotila/src/reducers/todos.js"],"names":["initialState","todos","state","action","type","id","text","completed","map","todo"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,CAAC,oBAAD,EAAuB,eAAvB,EAAwC,iBAAxC,EAA2D,eAA3D,CAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,gCACKF,KADL,UAEE;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFf;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAFF;;AAQF,SAAK,aAAL;AACE,aAAOL,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI;AAAA,eAClBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAApB,qBACQI,IADR;AACcF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAD/B,aAEIE,IAHe;AAAA,OAAd,CAAP;;AAKF;AACE,aAAOP,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,KAAf","sourcesContent":["const initialState = [\"Do Car Maintenance\", \"Study Spanish\", \"Renew Insurance\", \"Buy Groceries\"];\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ];\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      );\n    default:\n      return state\n  }\n}\n\nexport default todos\n"]},"metadata":{},"sourceType":"module"}